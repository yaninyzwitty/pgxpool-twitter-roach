type User {
  id: ID!
  username: String!
  email: String!
  createdAt: Time! # Custom scalar, map to google.protobuf.Timestamp
}

scalar Time

type Comment {
  id: ID!
  user: User!
  postId: ID!
  body: String!
  createdAt: Time!
  updatedAt: Time
}

type Post {
  id: ID!
  user: User!
  body: String!
  createdAt: Time!
  updatedAt: Time
  comments: [Comment!]
}

type Query {
  getUserById(id: ID!): User!
  getUserByEmail(email: String!): User!
  getUsers(limit: Int = 10, offset: Int = 0): [User!]!
  getComment(commentID: ID!): Comment!
  getPost(postID: ID!): Post!
  getPosts(limit: Int = 10, offset: Int = 0): [Post!]!
}

type Subscription {
  streamUsers(limit: Int = 100): User
}
